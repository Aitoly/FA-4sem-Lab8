Задания к работе №8 по фундаментальным алгоритмам.

1. Реализуйте алгоритм выделения динамической памяти «Метод первого
подходящего». Параметр N определяет размер динамической кучи. Напишите
моделирующее приложение, которое позволяет проследить работу вашего
алгоритма. На вход программы подается список текстовых файлов, которые
содержат инструкции вида:
var1=alloc(<size>);
var2=var1;
var3=alloc(<size>);
var1=var3;
dealloc(var1);
dealloc(var2);
Количество инструкций и их порядок произволен. После обработки инструкций
программа отображает состояние кучи помечая занятую и не занятую области
памяти и выводит статистическую информацию: размер свободной памяти, размер
самого длинного свободного блока, количество занятых фрагментов памяти. Если
во время обработки инструкций возникает нехватка памяти, то необходимо вывести
сообщение об ошибке. Для освобождения занятого участка памяти реализуйте
алгоритм «Освобождение в рассортированном списке». Операция присваивания (=)
является поверхностным копированием, при котором не выделяется новый участок
памяти. Для отслеживания освобождаемых объектов используйте метод подсчета
ссылок.

2. (продолжение задания 1) Замените алгоритм «Освобождение в рассортированном
списке» из задания 1 на «Освобождение с дескрипторами границ». Проведите
экспериментальный анализ их эффективности.

3. На вход программе подается список текстовых файлов, которые содержат
инструкции вида:
{
ShowVar;
var1=new(<size>);
{
var2=new(<size1>);
ShowVar;
{
{
var3=new(<size2>);
}
var5=new(<size3>);
ShowVar;
var21=new(<size12>);
}
var22=new(<size21>);
}
var2=new(<size1>);
ShowVar;
}
Количество инструкций и их порядок произволен. Оператор new запрашивает
нужный размер оперативной памяти. Оператор ShowVar выводит на экран все
видимые из данного места кода переменные, с указанием размеров памяти, который
ими занят. Максимально доступный объем оперативной памяти определяется
параметром N. Фигурные скобки определяют блоки кода, которые определяют
области видимости переменных. Если переменная покидает область видимости она 
становится недоступной. При покидании области видимости, занятая память не
возвращается автоматически. Для управления памятью используйте алгоритмы
«системы двойников». При этом учтите, что, если очередной вызов оператора new
не может быть выполнен, то необходимо запустить операцию освобождения памяти
и вновь попытаться выделить требуемый блок.

4. Некоторое заболевание от человека к человеку передается контактным путем.
Вероятность заразиться им при контакте равна �!, �! ∈ (0; 1]. Заразившийся может
излечиться с вероятностью �", �" ∈ [0; 1]. Вспышкой болезни будем называть
случайное возникновение заболевания у какого-либо человека. Смоделируйте
распространение заболевания, если у вас имеются данные о людях, о их знакомстве
друг с другом. Формат входных данных определите самостоятельно. Для
демонстрации работы вашей программы тестовые данные можете взять с
https://habr.com/ru/post/148162/ Реализуйте возможности поиска всех не
заразившихся людей; всех исцелившихся; поиска исцелившихся людей, окружение
которых не исцелилось; определения не заразившихся людей, если все их окружение
заразилось. Считаем окружение человека всех тех, с кем он непосредственно знаком.